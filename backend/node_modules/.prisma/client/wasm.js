
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.App_usuarioScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  clinica_id: 'clinica_id',
  criado_em: 'criado_em',
  atualizado_em: 'atualizado_em',
  clinicaId: 'clinicaId'
};

exports.Prisma.App_clinicaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  endereco: 'endereco',
  telefone: 'telefone',
  email: 'email',
  instancia: 'instancia',
  base_url: 'base_url',
  criada_em: 'criada_em',
  atualizada_em: 'atualizada_em',
  tokenEvolution: 'tokenEvolution'
};

exports.Prisma.App_log_acaoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  acao: 'acao',
  criado_em: 'criado_em'
};

exports.Prisma.App_conversaScalarFieldEnum = {
  id: 'id',
  paciente_id: 'paciente_id',
  clinica_id: 'clinica_id',
  iniciada_em: 'iniciada_em',
  atualizada_em: 'atualizada_em',
  grupo_id: 'grupo_id'
};

exports.Prisma.App_mensagemScalarFieldEnum = {
  id: 'id',
  conversa_id: 'conversa_id',
  remetente: 'remetente',
  conteudo: 'conteudo',
  tipo_mensagem: 'tipo_mensagem',
  evolution_id: 'evolution_id',
  status: 'status',
  criadaEm: 'criadaEm'
};

exports.Prisma.App_mensagem_sugestaoScalarFieldEnum = {
  id: 'id',
  clinica_id: 'clinica_id',
  sugestao: 'sugestao',
  criado_em: 'criado_em'
};

exports.Prisma.App_midiaScalarFieldEnum = {
  id: 'id',
  mensagem_id: 'mensagem_id',
  tipo: 'tipo',
  file_url: 'file_url',
  criado_em: 'criado_em',
  mime_type: 'mime_type',
  caption: 'caption',
  duration: 'duration',
  file_size: 'file_size'
};

exports.Prisma.App_pacienteScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  criado_em: 'criado_em',
  atualizado_em: 'atualizado_em',
  clinica_id: 'clinica_id'
};

exports.Prisma.App_paciente_clinicaScalarFieldEnum = {
  paciente_id: 'paciente_id',
  clinica_id: 'clinica_id'
};

exports.Prisma.App_resposta_prontaScalarFieldEnum = {
  id: 'id',
  clinica_id: 'clinica_id',
  titulo: 'titulo',
  conteudo: 'conteudo',
  criada_em: 'criada_em'
};

exports.Prisma.App_tagScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  clinica_id: 'clinica_id',
  criada_em: 'criada_em'
};

exports.Prisma.ConsultasScalarFieldEnum = {
  id: 'id',
  medico_id: 'medico_id',
  data_hora: 'data_hora',
  tipo: 'tipo',
  status: 'status',
  paciente_id: 'paciente_id'
};

exports.Prisma.ConversationsScalarFieldEnum = {
  id: 'id',
  telefone_user: 'telefone_user',
  messages: 'messages',
  created_at: 'created_at'
};

exports.Prisma.DocumentsScalarFieldEnum = {
  id: 'id',
  text: 'text',
  metadata: 'metadata'
};

exports.Prisma.EspecialidadesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.Medico_procedimentosScalarFieldEnum = {
  id: 'id',
  medico_id: 'medico_id',
  procedimento_id: 'procedimento_id'
};

exports.Prisma.Medico_sintomasScalarFieldEnum = {
  id: 'id',
  medico_id: 'medico_id',
  sintoma_id: 'sintoma_id'
};

exports.Prisma.MedicosScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  especialidade_id: 'especialidade_id',
  id_calendario: 'id_calendario',
  dia_atendimento: 'dia_atendimento',
  metodo_pagamento: 'metodo_pagamento'
};

exports.Prisma.N8n_chat_historiesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  message: 'message'
};

exports.Prisma.PacientesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  telefone: 'telefone'
};

exports.Prisma.ProcedimentosScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  preco: 'preco',
  tempo_estimado: 'tempo_estimado',
  descricao: 'descricao'
};

exports.Prisma.Schema_migrationsScalarFieldEnum = {
  version: 'version'
};

exports.Prisma.SintomasScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.Agent_controlScalarFieldEnum = {
  numero: 'numero',
  agente_ativo: 'agente_ativo',
  datehora: 'datehora',
  ignorar_automacao: 'ignorar_automacao'
};

exports.Prisma.App_grupoScalarFieldEnum = {
  id: 'id',
  jid: 'jid',
  nome: 'nome',
  clinica_id: 'clinica_id',
  criado_em: 'criado_em'
};

exports.Prisma.App_receiptScalarFieldEnum = {
  id: 'id',
  mensagem_id: 'mensagem_id',
  event_type: 'event_type',
  receipt_time: 'receipt_time',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  app_usuario: 'app_usuario',
  app_clinica: 'app_clinica',
  app_log_acao: 'app_log_acao',
  app_conversa: 'app_conversa',
  app_mensagem: 'app_mensagem',
  app_mensagem_sugestao: 'app_mensagem_sugestao',
  app_midia: 'app_midia',
  app_paciente: 'app_paciente',
  app_paciente_clinica: 'app_paciente_clinica',
  app_resposta_pronta: 'app_resposta_pronta',
  app_tag: 'app_tag',
  consultas: 'consultas',
  conversations: 'conversations',
  documents: 'documents',
  especialidades: 'especialidades',
  medico_procedimentos: 'medico_procedimentos',
  medico_sintomas: 'medico_sintomas',
  medicos: 'medicos',
  n8n_chat_histories: 'n8n_chat_histories',
  pacientes: 'pacientes',
  procedimentos: 'procedimentos',
  schema_migrations: 'schema_migrations',
  sintomas: 'sintomas',
  agent_control: 'agent_control',
  app_grupo: 'app_grupo',
  app_receipt: 'app_receipt'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
